Resposibilities 
===============

Resposibilities include container Deployment, scaling & descaling of containers


Advantages:
===================

1. Automatically Sheduling==> automatically Sheduling Containers on Cluster nodes 
   =======================
2.Self Healing Capibilities==> k8s will replace or reshedule when container goes down 
  ========================
or node goes down 

3. Roleouts & rollback ===> Roleouts & rollback changes in Docker images  versions changes 
   ===================
4.Horizontal Scaling & Load Balancing===> It will support scaling & Load balancing 
  ===================================
K8s can scaleup & scale Down the applications as per the requirements with the simple command 

5. Service Discovery & Load Balancing:
   ===================================

k8s their is no need to worry abount network & communication because kubernets will automatically assign IP addresses and DNS name & Load balancing within the cluster


Containers will gets their own ip Adress if you want to acess we need DNS names for acessing & load balancing inside the cluster 


6. Storage Orchestration:
   =======================

you can mount your storage system as your choice 

eg:NFS EBS

-----------------------------------------------------------


Kubernetes Implements a cluster computing background everything works from inside a kubernetes Cluster

Q) Can I get highly Availibility on 2 master nodes 

A) No we need multi master we need atlease 3 master should be like in Odd Numbers (1, 3, 5, 7)


Kubernetes Architecture
======================

Why k8s is deplicatating docker ?


aftre Docker20.0 they are depricating support but still we can use.

In  1.24 can we use docker ?

In 1.24 they have compleatly remove in 1.24 so we cannot use , insted of docker we can use Docker D , CRIO, ROCKET as Run time 



What components are thier in control plain ?


It will control complete components which are thier in the controlplane 

1)API Server

The name it self it is getting API calls. even though if you are executing any command [updating deploying, creating, deleting]  your are getting API calls



API Server: API server will recieve the request & process the request & validate the request 


1.API server will Authenticate & Authorize the request before it process the request


Authenticate 
------------------
tokens
certificates 


Authorize
-------------
weather this guy having permissions or not [delete, update,]

Both are success api server is valiadate & process the data The Request (data) will be stored in ETCD

2.Any request comes to the api server it will  Authenticate & Authorize before it process request.  The  request will be stored in ETCD


kubectl: 
--------------
CLI



ETCD:
-------

1.ETCD is a key value data store ETCD is DB for k8s it will maintain k8s info [How manynodes, how many pods, how many deployments, how many volumes, how many services ]

2. It will maintain state of k8s cluster

Scheduler:
-------------

1. Scheduler responsible for sheduling the podes to the nodes 

2 pods will have a containers 

3. Scheduler will try to shedule unscheduler pods , It will talk to etcd & it will scheduler the pods in the node machine 



Kublet:

K8s agent 

1.kublet is primany node agent that run on each & every node 

2.It will be responsible for what ever is given by master machine

3 container is running or not it will take care by kubelet . If some thing goes wrong it will restart/ recreate container in that pod 


kubectl & kubelet?


kubectl is cli , Using KUbectl I will be communicate with control plane 

Kubelet is an agent which is responsible for followning instructions from the master [Control Plane]

Control Manager
--------------------

node Control Manager
Replica Set Control Manager
Deployment Control Manager 

End Point Control Manager


Control manager job controls will perform differt differt tasks in the background & it will perform cluster level functions 

NodeControl Manager
----------------------
Node control manager will notice when node goes down in the cluster 

When node goes down it will take action & take responsibe for worker node machines 

When nodes goes down it will communicate  to api server & shedule the pods to another nodes , What ever pods are running it will be shifted to another  nodes.

Replica Set Control Manager
---------------------------

Suppose I requesting two pods for one application , If some thing goes wrong with one pod again Replication Controller will ask api server to create another pod 



Kubeproxy or network Proxy
==============


using the kubepoxy will i able to access within the cluster or outside the cluster  

Ex:

I deployed application in cluster now I want to acess my application kubeproxy is make it possible for acess my application 





      


 


 





 









 

